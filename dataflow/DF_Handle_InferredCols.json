{
	"name": "DF_Handle_InferredCols",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable_LAD_Invoice_FACT",
						"type": "DatasetReference"
					},
					"name": "sourceInvoiceFACT"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable_LAD_Customer_DIM",
						"type": "DatasetReference"
					},
					"name": "sourceCustomerDIM"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable_LAD_Customer_DIM",
						"type": "DatasetReference"
					},
					"name": "CustomerMAXID"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable_LAD_Customer_DIM",
						"type": "DatasetReference"
					},
					"name": "sinkCustomerDIM"
				}
			],
			"transformations": [
				{
					"name": "join"
				},
				{
					"name": "filter1"
				},
				{
					"name": "selectReqCols"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "joinMAXID"
				},
				{
					"name": "selectSInkCols"
				}
			],
			"scriptLines": [
				"parameters{",
				"     job_id as string (\"SP_001_InferredRecords_LOAD\")",
				"}",
				"source(output(",
				"          INVOICE_SK as integer,",
				"          INVOICE_ID as integer,",
				"          CUSTOMER_ID as integer,",
				"          INVOICE_DATE as date,",
				"          SHIP_TO as string,",
				"          SHIP_TO_CITY as string,",
				"          SHIP_TO_COUNTRY as string,",
				"          SALES_PERSON_ID as integer,",
				"          SALES_PERSON_NAME as string,",
				"          TOTAL_PRODUCT_CNT as integer,",
				"          TOTAL_COST as double,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceInvoiceFACT",
				"source(output(",
				"          CUSTOMER_SK as integer,",
				"          CUSTOMER_ID as integer,",
				"          CUSTOMER_NAME as string,",
				"          BILL_TO as string,",
				"          INFERRED_STATUS as integer,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceCustomerDIM",
				"source(output(",
				"          MAX_CUSTOMER_SK as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'select NVL(MAX(CUSTOMER_SK),0) as Max_CUSTOMER_SK from LAD_ASSIGN.CUSTOMER_DIM',",
				"     format: 'query') ~> CustomerMAXID",
				"sourceInvoiceFACT, sourceCustomerDIM join(sourceInvoiceFACT@CUSTOMER_ID == sourceCustomerDIM@CUSTOMER_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join",
				"join filter(isNull(sourceCustomerDIM@CUSTOMER_ID)) ~> filter1",
				"filter1 select(mapColumn(",
				"          CUSTOMER_SK,",
				"          CUSTOMER_ID = sourceInvoiceFACT@CUSTOMER_ID,",
				"          CUSTOMER_NAME,",
				"          BILL_TO,",
				"          INFERRED_STATUS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqCols",
				"surrogateKey1 derive(CUSTOMER_SK = my_sk + MAX_CUSTOMER_SK,",
				"          CUSTOMER_NAME = \"N/A\",",
				"          BILL_TO = \"N/A\",",
				"          INFERRED_STATUS = 1,",
				"          di_job_id = $job_id,",
				"          di_load_dt = currentDate()) ~> derivedColumn1",
				"joinMAXID keyGenerate(output(my_sk as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"selectReqCols, CustomerMAXID join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinMAXID",
				"derivedColumn1 select(mapColumn(",
				"          CUSTOMER_SK,",
				"          CUSTOMER_ID,",
				"          CUSTOMER_NAME,",
				"          BILL_TO,",
				"          INFERRED_STATUS,",
				"          DI_JOB_ID = di_job_id,",
				"          DI_LOAD_DT = di_load_dt",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectSInkCols",
				"selectSInkCols sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CUSTOMER_SK,",
				"          CUSTOMER_ID,",
				"          CUSTOMER_NAME,",
				"          BILL_TO,",
				"          INFERRED_STATUS,",
				"          DI_JOB_ID,",
				"          DI_LOAD_DT",
				"     )) ~> sinkCustomerDIM"
			]
		}
	}
}