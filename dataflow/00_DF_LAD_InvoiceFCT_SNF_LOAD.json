{
	"name": "00_DF_LAD_InvoiceFCT_SNF_LOAD",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet_LAD_Invoice",
						"type": "DatasetReference"
					},
					"name": "sourceInvoiceFCT"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable_LAD_Invoice_FACT",
						"type": "DatasetReference"
					},
					"name": "sourceIncoiveMAXID"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable_LAD_Invoice_FACT",
						"type": "DatasetReference"
					},
					"name": "sinkSNF"
				}
			],
			"transformations": [
				{
					"name": "join"
				},
				{
					"name": "surrogateKey"
				},
				{
					"name": "derivedColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     job_id as string (\"SP_001\")",
				"}",
				"source(output(",
				"          invoiceId as string,",
				"          customerid as string,",
				"          invoiceDate as string,",
				"          ShipTo as string,",
				"          ShipTo_City as string,",
				"          ShipTo_Country as string,",
				"          SalespersonPersonID as string,",
				"          SalespersonName as string,",
				"          total_product_cnt as string,",
				"          Total as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourceInvoiceFCT",
				"source(output(",
				"          MAX_INVOICE_SK as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'select NVL(MAX(INVOICE_SK),0) as MAX_INVOICE_SK from LAD_ASSIGN.INVOICE_FACT',",
				"     format: 'query') ~> sourceIncoiveMAXID",
				"sourceInvoiceFCT, sourceIncoiveMAXID join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join",
				"join keyGenerate(output(my_InvoiceSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey",
				"surrogateKey derive(INVOICE_SK = my_InvoiceSK + MAX_INVOICE_SK,",
				"          DI_JOB_ID = $job_id,",
				"          DI_LOAD_DT = currentDate()) ~> derivedColumns",
				"derivedColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          INVOICE_SK,",
				"          INVOICE_ID = invoiceId,",
				"          CUSTOMER_ID = customerid,",
				"          INVOICE_DATE = invoiceDate,",
				"          SHIP_TO = ShipTo,",
				"          SHIP_TO_CITY = ShipTo_City,",
				"          SHIP_TO_COUNTRY = ShipTo_Country,",
				"          SALES_PERSON_ID = SalespersonPersonID,",
				"          SALES_PERSON_NAME = SalespersonName,",
				"          TOTAL_PRODUCT_CNT = total_product_cnt,",
				"          TOTAL_COST = Total,",
				"          DI_JOB_ID,",
				"          DI_LOAD_DT",
				"     )) ~> sinkSNF"
			]
		}
	}
}