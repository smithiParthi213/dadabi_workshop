{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable_LAD_Customer_STG",
						"type": "DatasetReference"
					},
					"name": "sourceCustomerSTG"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable_LAD_Customer_DIM",
						"type": "DatasetReference"
					},
					"name": "sourceCustomerDIM"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable_LAD_Customer_DIM",
						"type": "DatasetReference"
					},
					"name": "customerDimMaxID"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable_LAD_Customer_DIM",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CUSTOMER_ID as integer,",
				"          CUSTOMER_NAME as string,",
				"          BILL_TO as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceCustomerSTG",
				"source(output(",
				"          CUSTOMER_SK as integer,",
				"          CUSTOMER_ID as integer,",
				"          CUSTOMER_NAME as string,",
				"          BILL_TO as string,",
				"          INFERRED_STATUS as integer,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceCustomerDIM",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'select NVL(MAX(CUSTOMER_SK),0) as Max_customer_SK from LAD_ASSIGN.CUSTOMER_DIM',",
				"     format: 'query') ~> customerDimMaxID",
				"sourceCustomerSTG, sourceCustomerDIM join(sourceCustomerSTG@CUSTOMER_ID == sourceCustomerDIM@CUSTOMER_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join",
				"derivedColumn alterRow(insertIf(isNull(sourceCustomerDIM@CUSTOMER_ID)),",
				"     updateIf(INFERRED_STATUS==1)) ~> AlterRow1",
				"join keyGenerate(output(my_sk as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(new_SK = ERROR_FUNCTION('')) ~> derivedColumn",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CUSTOMER_ID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CUSTOMER_ID = sourceCustomerSTG@CUSTOMER_ID,",
				"          CUSTOMER_NAME = sourceCustomerSTG@CUSTOMER_NAME,",
				"          BILL_TO = sourceCustomerSTG@BILL_TO,",
				"          DI_JOB_ID = sourceCustomerSTG@DI_JOB_ID,",
				"          DI_LOAD_DT = sourceCustomerSTG@DI_LOAD_DT,",
				"          CUSTOMER_SK,",
				"          CUSTOMER_ID = sourceCustomerDIM@CUSTOMER_ID,",
				"          CUSTOMER_NAME = sourceCustomerDIM@CUSTOMER_NAME,",
				"          BILL_TO = sourceCustomerDIM@BILL_TO,",
				"          INFERRED_STATUS,",
				"          DI_JOB_ID = sourceCustomerDIM@DI_JOB_ID,",
				"          DI_LOAD_DT = sourceCustomerDIM@DI_LOAD_DT",
				"     )) ~> sink1"
			]
		}
	}
}